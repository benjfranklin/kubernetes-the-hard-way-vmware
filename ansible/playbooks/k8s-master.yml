---

- hosts: master
  vars:
    hostname: "{{ inventory_hostname_short }}"
  become: true
  tasks:
  
    - name: Check EasyRSA CA certificate exists
      file: 
        path: /usr/local/share/ca-certificates/EasyRSAca.crt
 
    # Kubernetes Admin client certificate configuration
    - name: Check admin client private key exists
      stat:
        path: "/etc/ssl/private/{{ inventory_hostname_short }}-admin.pem"
      register: certs_admin_private_key
    
    - name: Generate Admin private key with the default values (4096 bits, RSA)
      community.crypto.openssl_privatekey:
        path: "/etc/ssl/private/{{ inventory_hostname_short }}-admin.pem"
      when: not certs_admin_private_key.stat.exists

    - name: Create /etc/ssl/csr directory
      file: 
        state: directory
        path: /etc/ssl/csr

    - name: Check admin client certificate signing request exists
      stat:
        path: "/etc/ssl/csr/{{ inventory_hostname_short }}-admin.req"
      register: certs_admin_csr

    - name: Generate an admin client Certificate Signing Request
      community.crypto.openssl_csr:
        path: "/etc/ssl/csr/{{ inventory_hostname_short }}-admin.req"
        privatekey_path: "/etc/ssl/private/{{ inventory_hostname_short }}-admin.pem"
        common_name: admin
        organization_name: system:masters
      when: not certs_admin_csr.stat.exists
      register: certs_admin_csr_new

    - name: Fetch the admin client Certificate Signing Request
      fetch: 
        src: "/etc/ssl/csr/{{ inventory_hostname_short }}-admin.req"
        dest: "files/certificates/{{ inventory_hostname_short }}-admin.req"
      when: certs_admin_csr_new

- hosts: ca
  become: false
  tasks:

    - name: Transfer the admin client Certificate Signing Request to CA
      copy:
        src: "/etc/ssl/csr/{{ hostvars['master']['hostname'] }}-admin.req"
        dest: "requests/{{ hostvars['master']['hostname'] }}-admin.req"
      when: hostvars['master].['certs_admin_csr_new'] is defined
